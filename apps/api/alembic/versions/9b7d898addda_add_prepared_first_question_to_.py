"""add prepared_first_question to interviews

Revision ID: 9b7d898addda
Revises: 9, 8, 9, 9, 9, 5, 1, 1, a, f, 1, 6
Create Date: 2025-08-26 13:23:04.741505

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9b7d898addda'
down_revision = '98999511af16'
branch_labels = None
depends_on = None

def upgrade():
    # Ensure legacy table is dropped only if exists (idempotent in dev)
    op.execute('DROP TABLE IF EXISTS interview_signals CASCADE')

    # Add missing column on interviews
    op.add_column('interviews', sa.Column('prepared_first_question', sa.Text(), nullable=True))

    # Create supporting non-unique index if not present
    op.create_index('ix_convo_interview_seq', 'conversation_messages', ['interview_id', 'sequence_number'], unique=False)

    # Deduplicate any existing rows that would violate the unique constraint
    op.execute(
        """
        WITH duplicates AS (
            SELECT interview_id, sequence_number, MIN(id) AS keep_id
            FROM conversation_messages
            GROUP BY interview_id, sequence_number
            HAVING COUNT(*) > 1
        )
        DELETE FROM conversation_messages cm
        USING duplicates d
        WHERE cm.interview_id = d.interview_id
          AND cm.sequence_number = d.sequence_number
          AND cm.id <> d.keep_id;
        """
    )

    # Now enforce uniqueness on (interview_id, sequence_number)
    op.create_unique_constraint('uq_convo_interview_seq', 'conversation_messages', ['interview_id', 'sequence_number'])


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('interviews', 'prepared_first_question')
    op.drop_constraint('uq_convo_interview_seq', 'conversation_messages', type_='unique')
    op.drop_index('ix_convo_interview_seq', table_name='conversation_messages')
    op.create_table('interview_signals',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('interview_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('kind', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('meta', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['interview_id'], ['interviews.id'], name='interview_signals_interview_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='interview_signals_pkey')
    )
    # ### end Alembic commands ### 