"""Add user_id to jobs and candidates for multi-tenant support

Revision ID: 569ea3a99eb2
Revises: c, d, 5, e, 4, 5, a, 4, a, e, b, 3
Create Date: 2025-08-07 16:50:59.275086

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '569ea3a99eb2'
down_revision = 'cd5e45a4aeb3'
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Add user_id columns as nullable first
    op.add_column('candidates', sa.Column('user_id', sa.Integer(), nullable=True))
    op.add_column('jobs', sa.Column('user_id', sa.Integer(), nullable=True))
    
    # Set default user_id = 1 for existing records (assuming admin33@example.com has id=1)
    op.execute("UPDATE candidates SET user_id = 1 WHERE user_id IS NULL")
    op.execute("UPDATE jobs SET user_id = 1 WHERE user_id IS NULL")
    
    # Now make the columns NOT NULL
    op.alter_column('candidates', 'user_id', nullable=False)
    op.alter_column('jobs', 'user_id', nullable=False)
    
    # Add foreign key constraints
    op.create_foreign_key(None, 'candidates', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'jobs', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'jobs', type_='foreignkey')
    op.drop_column('jobs', 'user_id')
    op.drop_constraint(None, 'candidates', type_='foreignkey')
    op.drop_column('candidates', 'user_id')
    # ### end Alembic commands ### 